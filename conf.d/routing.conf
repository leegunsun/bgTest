# Enhanced Backend Routing Configuration for Complete Blue-Green Deployment
# Supports multiple deployment strategies: single, dual, canary, HA

# Primary routing map with extended deployment modes
map $active $backend {
    default         blue;        # Default to blue environment for safety
    
    # Single environment modes (original functionality)
    blue            blue;        # Blue-only traffic
    green           green;       # Green-only traffic
    
    # NEW: Enhanced deployment modes
    dual            dual;        # Load balanced across both environments
    loadbalance     dual;        # Alias for load balancing
    loadbalancing   dual;        # Alternative alias
    
    # Advanced routing modes
    canary          canary;      # Weighted canary deployment
    ha              ha;          # High availability mode
    fallback        fallback;    # Fallback/backup mode
}

# NEW: Deployment mode detection from deployment_mode variable
# This allows more granular control over routing behavior
map $deployment_mode $backend_mode {
    default         single;      # Default to single environment mode
    single          single;      # Traditional Blue-Green
    dual            dual;        # Synchronized dual environment
    canary          canary;      # Canary deployment
    ha              ha;          # High availability
}

# NEW: Advanced canary deployment with percentage-based routing
# Activated when $active is set to "canary"
split_clients "$remote_addr$request_id" $canary_bucket {
    10%     canary_new;          # 10% to new version (configurable)
    *       canary_stable;       # 90% to stable version
}

# Canary routing map (maps canary buckets to actual upstreams)
map $canary_bucket $canary_target {
    default         blue;        # Fallback to stable
    canary_stable   blue;        # Stable version (can be blue or green)
    canary_new      green;       # New version (opposite of stable)
}

# NEW: Dynamic upstream selection based on deployment state
# Allows runtime switching between routing strategies
map "$active:$deployment_mode" $final_backend {
    default                     blue;
    
    # Single environment routing (existing behavior)
    "blue:single"               blue;
    "green:single"              green;
    
    # Dual environment routing (NEW)
    "dual:dual"                 dual;
    "loadbalance:dual"          dual;
    "loadbalancing:dual"        dual;
    
    # Canary deployment routing (NEW)  
    "canary:canary"             canary;
    
    # High availability routing (NEW)
    "ha:ha"                     ha;
    "ha:dual"                   ha;
    
    # Fallback routing
    "fallback:single"           fallback;
    "fallback:dual"             fallback;
}

# NEW: Health-based routing override
# If primary backend fails, automatically switch to backup
map $upstream_status $health_backend {
    default         $final_backend;   # Use calculated backend
    down            fallback;         # Switch to fallback if primary is down
    degraded        ha;               # Use HA mode if performance degraded
}

# NEW: Load balancing method configuration
# Allows different load balancing algorithms
map $lb_method $upstream_config {
    default         dual;             # Default round-robin
    round_robin     dual;             # Round-robin distribution
    least_conn      dual;             # Least connections (requires least_conn directive)
    ip_hash         dual;             # IP hash-based (requires ip_hash directive)
    weighted        canary;           # Weighted distribution
}