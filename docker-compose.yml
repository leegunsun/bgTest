# True Blue-Green Deployment - Identical Environments
# Dynamic version deployment to inactive environments with zero-downtime switching

services:
  # NGINX Proxy Service - Traffic Router (Persistent)
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    hostname: nginx-proxy
    ports:
      - "80:80"        # Main proxy
      - "8080:8080"    # Admin interface
      - "8081:8081"    # Admin API for traffic switching
    depends_on:
      blue-app:
        condition: service_healthy
      green-app:
        condition: service_healthy
      api-server:
        condition: service_healthy
    volumes:
      # NGINX main configuration
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Shared configuration for zero-downtime switching
      - ./conf.d/upstreams.conf:/etc/nginx/conf.d/upstreams.conf:ro
      - ./conf.d/active.env:/etc/nginx/conf.d/active.env:rw
      - ./conf.d/routing.conf:/etc/nginx/conf.d/routing.conf:ro
      - ./admin.html:/var/www/html/index.html:ro
      - deployment_state:/etc/deployment  # Version tracking
      - nginx_logs:/var/log/nginx
    networks:
      bluegreen-network:
        aliases:
          - nginx-proxy
          - nginx
    restart: unless-stopped
    mem_limit: 120m                              # Strict memory limit
    memswap_limit: 120m                          # No swap usage
    cpus: '0.2'                                  # Limit CPU usage
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/status"]
      interval: 30s                              # Longer interval for t2.micro
      timeout: 10s                               # More timeout
      retries: 3                                 # Fewer retries
      start_period: 90s                          # Much longer startup time
    environment:
      - NGINX_RESOLVER=127.0.0.11  # Docker's internal DNS

  # Blue Environment Application (t2.micro optimized)
  blue-app:
    build: 
      context: .
      dockerfile: app-service/Dockerfile
    container_name: blue-app
    hostname: blue-app
    environment:
      - ENV_NAME=blue
      - SERVER_PORT=3001
      - VERSION=${BLUE_VERSION:-1.0.0}          # Dynamic version
      - DEPLOYMENT_ID=${BLUE_DEPLOYMENT_ID:-blue-default}
      - COLOR_THEME=blue                        # Visual distinction only
      - NODE_OPTIONS=--max-old-space-size=128   # Limit Node.js memory
    expose:
      - "3001"  # Internal network communication
    ports:
      - "3001:3001"  # Direct access for debugging
    volumes:
      - deployment_state:/app/deployment         # Version tracking
    networks:
      bluegreen-network:
        aliases:
          - blue-app
          - blue-server
    restart: unless-stopped
    mem_limit: 150m                              # Strict memory limit
    memswap_limit: 150m                          # No swap usage
    cpus: '0.3'                                  # Limit CPU usage
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s                              # Longer interval for t2.micro
      timeout: 10s                               # More timeout
      retries: 3                                 # Fewer retries
      start_period: 60s                          # Longer startup time

  # Green Environment Application (t2.micro optimized)
  green-app:
    build: 
      context: .
      dockerfile: app-service/Dockerfile
    container_name: green-app
    hostname: green-app
    environment:
      - ENV_NAME=green
      - SERVER_PORT=3002
      - VERSION=${GREEN_VERSION:-1.0.0}          # Dynamic version
      - DEPLOYMENT_ID=${GREEN_DEPLOYMENT_ID:-green-default}
      - COLOR_THEME=green                       # Visual distinction only
      - NODE_OPTIONS=--max-old-space-size=128   # Limit Node.js memory
    expose:
      - "3002"  # Internal network communication
    ports:
      - "3002:3002"  # Direct access for debugging
    volumes:
      - deployment_state:/app/deployment         # Version tracking
    networks:
      bluegreen-network:
        aliases:
          - green-app
          - green-server
    restart: unless-stopped
    mem_limit: 150m                              # Strict memory limit
    memswap_limit: 150m                          # No swap usage
    cpus: '0.3'                                  # Limit CPU usage
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s                              # Longer interval for t2.micro
      timeout: 10s                               # More timeout
      retries: 3                                 # Fewer retries
      start_period: 60s                          # Longer startup time

  # API Service for Deployment Control (t2.micro optimized)
  api-server:
    build: 
      context: ./api-service
      dockerfile: Dockerfile
    container_name: api-server
    hostname: api-server
    ports:
      - "9000:9000"
    volumes:
      # Shared configuration access (no Docker socket needed)
      - ./conf.d/active.env:/etc/nginx/conf.d/active.env:ro
      - deployment_state:/etc/deployment:rw     # Version management
    networks:
      bluegreen-network:
        aliases:
          - api-server
          - api
    restart: unless-stopped
    mem_limit: 100m                              # Strict memory limit
    memswap_limit: 100m                          # No swap usage
    cpus: '0.2'                                  # Limit CPU usage
    environment:
      - NO_DOCKER_SOCKET=true
      - NODE_OPTIONS=--max-old-space-size=80     # Very limited memory for API
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9000/health"]
      interval: 30s                              # Longer interval for t2.micro
      timeout: 10s                               # More timeout
      retries: 2                                 # Fewer retries
      start_period: 45s                          # Longer startup time

  # Zero-Downtime Monitoring Service (DISABLED for t2.micro)
  # monitor:
  #   build: 
  #     context: ./monitoring
  #     dockerfile: Dockerfile
  #   container_name: deployment-monitor
  #   hostname: deployment-monitor
  #   environment:
  #     - MONITOR_INTERVAL=5
  #     - ALERT_THRESHOLD=3
  #     - NGINX_URL=http://nginx-proxy:80
  #     - BLUE_URL=http://blue-app:3001
  #     - GREEN_URL=http://green-app:3002
  #     - API_URL=http://api-server:9000
  #   depends_on:
  #     - nginx-proxy
  #     - blue-app
  #     - green-app
  #     - api-server
  #   networks:
  #     bluegreen-network:
  #       aliases:
  #         - monitor
  #         - deployment-monitor
  #   restart: unless-stopped
  #   volumes:
  #     - monitoring_data:/app/data
  #     - deployment_state:/app/deployment:ro     # Access to version info
  #   healthcheck:
  #     test: ["CMD", "pgrep", "-f", "monitor"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3

networks:
  bluegreen-network:
    driver: bridge
    name: bluegreen-network
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16  # Consistent networking

volumes:
  nginx_logs:
    driver: local
  monitoring_data:
    driver: local
  deployment_state:
    driver: local                              # Version and deployment tracking