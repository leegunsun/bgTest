events {
    worker_connections 1024;
}

http {
    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    # Docker DNS resolver
    resolver 127.0.0.11 valid=30s;
    resolver_timeout 5s;
    
    # Enhanced configuration based on 새로운 판단 파일 recommendations
    # Include upstream definitions
    include /etc/nginx/conf.d/upstreams.conf;
    
    # Include routing configuration (map variables)
    include /etc/nginx/conf.d/routing.conf;
    
    
    # 메인 서버
    server {
        listen 80;
        server_name localhost;
        
        # Include active environment configuration
        include /etc/nginx/conf.d/active.env;
        
        # Health check endpoint - NGINX level
        location /health {
            return 200 "ok\n";
            add_header Content-Type text/plain;
        }
        
        # 루트 경로 - 변수 기반 활성 서버 라우팅 (새로운 판단 파일 방식)
        location / {
            proxy_pass http://$backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 연결 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Blue 서버 직접 접근 (t2.micro: redirected to green)
        location /blue {
            return 302 /green/;
        }
        
        location /blue/ {
            # CORS 헤더 추가
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";
            
            # t2.micro optimization: blue redirects to green
            proxy_pass http://green/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Green 서버 직접 접근 (새로운 판단 파일 방식)
        location /green {
            return 302 /green/;
        }
        
        location /green/ {
            # CORS 헤더 추가
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";
            
            proxy_pass http://green/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # 전체 상태 확인 엔드포인트
        location /status {
            default_type application/json;
            return 200 "{\"nginx\": \"running\", \"config\": \"active\"}";
        }
        
        # API 엔드포인트 - 배포 전환
        location /api/switch/blue {
            proxy_pass http://127.0.0.1:9000/switch/blue;
        }
        
        location /api/switch/green {
            proxy_pass http://127.0.0.1:9000/switch/green;
        }
    }
    
    # 관리자 인터페이스
    server {
        listen 8080;
        server_name localhost;
        
        root /var/www/html;
        index index.html;
        
        # 관리자 페이지를 별도 파일로 분리
    }
}
